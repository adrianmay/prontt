assert(isa(rhaboo,project)).
assert(colour(rhaboo,black)).
assert(isa(foo,task)).
assert(colour(foo,black)).
assert(parent(foo,rhaboo)).
retractall(duration(foo,_)).
assert(duration(foo,2)).
retractall(duration(foo,_)).
assert(duration(foo,3)).
retractall(duration(foo,_)).
assert(duration(foo,4)).
assert(isa(bar,task)).
assert(colour(bar,black)).
assert(parent(bar,rhaboo)).
retractall(duration(bar,_)).
assert(duration(bar,2)).
retractall(duration(bar,_)).
assert(duration(bar,3)).
assert(seq(foo,bar)).
assert(isa(wop,task)).
assert(colour(wop,black)).
assert(parent(wop,rhaboo)).
retractall(duration(wop,_)).
assert(duration(wop,2)).
assert(seq(bar,wop)).
assert(seq(foo,wop)).
retractall(seq(foo,bar)).
retractall(seq(bar,wop)).
assert(seq(wop,bar)).
retractall(seq(wop,bar)).
assert(seq(bar,foo)).
retractall(seq(bar,foo)).
retractall(seq(foo,wop)).
assert(seq(bar,wop)).
assert(seq(bar,foo)).
assert(seq(wop,foo)).
retractall(seq(bar,foo)).
retractall(seq(wop,foo)).
retractall(seq(bar,wop)).
assert(seq(bar,wop)).
assert(seq(foo,wop)).
assert(seq(bar,foo)).
retractall(seq(bar,foo)).
assert(seq(foo,bar)).
retractall(seq(foo,wop)).
retractall(seq(bar,wop)).
assert(seq(wop,foo)).
retractall(seq(foo,bar)).
retractall(seq(wop,foo)).
assert(seq(bar,wop)).
assert(seq(foo,bar)).
assert(seq(foo,wop)).
retractall(seq(foo,wop)).
retractall(seq(bar,wop)).
assert(seq(foo,wop)).
assert(isa(java,skill)).
assert(colour(java,black)).
assert(isa(cpp,skill)).
assert(colour(cpp,black)).
assert(isa(prolog,skill)).
assert(colour(prolog,black)).
assert(isa(jack,person)).
assert(colour(jack,black)).
retractall(colour(jack,_)).
assert(colour(jack,green)).
assert(isa(jill,person)).
assert(colour(jill,black)).
retractall(colour(jill,_)).
assert(colour(jill,crimson)).
retractall(level(jill,cpp,_)).
assert(level(jill,cpp,1)).
retractall(level(jack,cpp,_)).
assert(level(jack,cpp,1)).
retractall(level(jack,cpp,_)).
assert(level(jack,cpp,2)).
assert(isa(evon,project)).
assert(colour(evon,black)).
assert(isa(eva,task)).
assert(colour(eva,black)).
assert(parent(eva,evon)).
retractall(duration(eva,_)).
assert(duration(eva,2)).
retractall(duration(eva,_)).
assert(duration(eva,3)).
retractall(duration(eva,_)).
assert(duration(eva,4)).
retractall(duration(eva,_)).
assert(duration(eva,5)).
assert(isa(elbow,task)).
assert(colour(elbow,black)).
assert(parent(elbow,evon)).
retractall(duration(elbow,_)).
assert(duration(elbow,2)).
assert(seq(eva,elbow)).
assert(isa(ajon,project)).
assert(colour(ajon,black)).
retractall(level(jill,prolog,_)).
assert(level(jill,prolog,1)).
retractall(level(jill,prolog,_)).
assert(level(jill,prolog,2)).
retractall(level(jill,prolog,_)).
assert(level(jill,prolog,3)).
retractall(level(jack,java,_)).
assert(level(jack,java,1)).
retractall(level(jack,java,_)).
assert(level(jack,java,2)).
retractall(level(jack,java,_)).
assert(level(jack,java,3)).
retractall(level(jack,cpp,_)).
assert(level(jack,cpp,3)).
retractall(level(jack,cpp,_)).
assert(level(jack,cpp,0)).
retractall(level(jack,cpp,_)).
assert(level(jack,cpp,1)).
retractall(level(jill,cpp,_)).
assert(level(jill,cpp,2)).
retractall(colour(jill,_)).
assert(colour(jill,deeppink)).
retractall(colour(jack,_)).
assert(colour(jack,blue)).
assert(isa(zed,task)).
assert(colour(zed,black)).
assert(parent(zed,rhaboo)).
retractall(duration(zed,_)).
assert(duration(zed,2)).
retractall(duration(zed,_)).
assert(duration(zed,3)).
retractall(duration(zed,_)).
assert(duration(zed,4)).
retractall(duration(zed,_)).
assert(duration(zed,5)).
retractall(duration(zed,_)).
assert(duration(zed,6)).
retractall(duration(zed,_)).
assert(duration(zed,7)).
retractall(duration(zed,_)).
assert(duration(zed,8)).
retractall(duration(zed,_)).
assert(duration(zed,9)).
retractall(duration(zed,_)).
assert(duration(zed,10)).
assert(seq(wop,zed)).
assert(seq(bar,zed)).
retractall(duration(bar,_)).
assert(duration(bar,4)).
retractall(duration(bar,_)).
assert(duration(bar,5)).
assert(seq(foo,zed)).
