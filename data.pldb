assert(isa(rhaboo,project)).
assert(isa(foo,task)).
assert(parent(foo,rhaboo)).
assert(duration(foo,1)).
retractall(duration(foo,_)).
assert(duration(foo,2)).
retractall(duration(foo,_)).
assert(duration(foo,3)).
assert(isa(bar,task)).
assert(parent(bar,rhaboo)).
assert(duration(bar,1)).
retractall(duration(bar,_)).
assert(duration(bar,2)).
retractall(duration(bar,_)).
assert(duration(bar,3)).
retractall(duration(bar,_)).
assert(duration(bar,4)).
assert(seq(foo,bar)).
assert(isa(wop,task)).
assert(parent(wop,rhaboo)).
assert(duration(wop,1)).
retractall(duration(wop,_)).
assert(duration(wop,2)).
retractall(duration(wop,_)).
assert(duration(wop,3)).
retractall(duration(wop,_)).
assert(duration(wop,4)).
retractall(duration(wop,_)).
assert(duration(wop,5)).
assert(seq(bar,wop)).
assert(seq(foo,wop)).
retractall(seq(bar,wop)).
retractall(isa(wop,_)).
retractall(parent(wop,_)).
retractall(colour(wop,_)).
retractall(level(wop,_,_)).
retractall(level(_,wop,_)).
retractall(seq(wop,_)).
retractall(seq(_,wop)).
retractall(seq(foo,bar)).
assert(seq(foo,bar)).
assert(isa(java,skill)).
assert(isa(cpp,skill)).
assert(isa(prolog,skill)).
assert(isa(mary,person)).
assert(colour(mary,grey)).
retractall(colour(mary,_)).
assert(colour(mary,deeppink)).
assert(isa(jack,person)).
assert(colour(jack,grey)).
retractall(colour(jack,_)).
assert(colour(jack,blue)).
assert(isa(jill,person)).
assert(colour(jill,grey)).
retractall(colour(jill,_)).
assert(colour(jill,coral)).
assert(isa(greg,person)).
assert(colour(greg,grey)).
retractall(colour(greg,_)).
assert(colour(greg,green)).
retractall(level(mary,prolog,_)).
assert(level(mary,prolog,1)).
retractall(level(mary,prolog,_)).
assert(level(mary,prolog,2)).
retractall(level(mary,prolog,_)).
assert(level(mary,prolog,3)).
retractall(level(mary,cpp,_)).
assert(level(mary,cpp,1)).
retractall(level(mary,java,_)).
assert(level(mary,java,1)).
retractall(level(jack,cpp,_)).
assert(level(jack,cpp,1)).
retractall(level(jack,cpp,_)).
assert(level(jack,cpp,2)).
retractall(level(jack,cpp,_)).
assert(level(jack,cpp,3)).
retractall(level(jack,java,_)).
assert(level(jack,java,1)).
retractall(level(jack,java,_)).
assert(level(jack,java,2)).
retractall(level(jill,java,_)).
assert(level(jill,java,1)).
retractall(level(jill,java,_)).
assert(level(jill,java,2)).
retractall(level(jill,java,_)).
assert(level(jill,java,3)).
retractall(level(jill,cpp,_)).
assert(level(jill,cpp,1)).
retractall(level(greg,java,_)).
assert(level(greg,java,1)).
assert(isa(wop,task)).
assert(parent(wop,rhaboo)).
assert(duration(wop,1)).
retractall(duration(wop,_)).
assert(duration(wop,6)).
retractall(duration(wop,_)).
assert(duration(wop,7)).
retractall(duration(wop,_)).
assert(duration(wop,8)).
retractall(duration(wop,_)).
assert(duration(wop,9)).
retractall(duration(wop,_)).
assert(duration(wop,10)).
assert(seq(foo,wop)).
retractall(assigned(foo,_)).
assert(assigned(foo,mary)).
retractall(assigned(bar,_)).
assert(assigned(bar,jack)).
retractall(assigned(wop,_)).
assert(assigned(wop,jack)).
retractall(assigned(wop,_)).
assert(assigned(wop,jill)).
assert(isa(zed,task)).
assert(parent(zed,rhaboo)).
assert(duration(zed,1)).
retractall(duration(zed,_)).
assert(duration(zed,2)).
assert(seq(wop,zed)).
assert(seq(bar,zed)).
assert(seq(foo,zed)).
retractall(seq(foo,zed)).
retractall(assigned(zed,_)).
assert(assigned(zed,greg)).
retractall(assigned(wop,_)).
assert(assigned(wop,jack)).
retractall(assigned(wop,_)).
assert(assigned(wop,jill)).
retractall(assigned(wop,_)).
assert(assigned(wop,jack)).
retractall(assigned(wop,_)).
assert(assigned(wop,jill)).
retractall(assigned(foo,_)).
assert(assigned(foo,jack)).
retractall(assigned(foo,_)).
assert(assigned(foo,mary)).
retractall(assigned(bar,_)).
retractall(assigned(bar,_)).
assert(assigned(bar,jack)).
retractall(assigned(wop,_)).
assert(assigned(wop,jack)).
assert(isa(evon,project)).
assert(isa(eva,task)).
assert(parent(eva,evon)).
assert(duration(eva,1)).
retractall(duration(eva,_)).
assert(duration(eva,2)).
retractall(duration(eva,_)).
assert(duration(eva,3)).
retractall(duration(eva,_)).
assert(duration(eva,4)).
retractall(duration(eva,_)).
assert(duration(eva,5)).
retractall(assigned(eva,_)).
assert(assigned(eva,mary)).
retractall(duration(foo,_)).
assert(duration(foo,4)).
retractall(duration(foo,_)).
assert(duration(foo,5)).
retractall(duration(foo,_)).
assert(duration(foo,6)).
retractall(duration(foo,_)).
assert(duration(foo,7)).
retractall(seq(foo,bar)).
retractall(seq(foo,wop)).
assert(isa(eli,task)).
assert(parent(eli,evon)).
assert(duration(eli,1)).
retractall(duration(eli,_)).
assert(duration(eli,2)).
retractall(duration(eli,_)).
assert(duration(eli,3)).
retractall(duration(eli,_)).
assert(duration(eli,4)).
retractall(duration(eli,_)).
assert(duration(eli,5)).
retractall(duration(eli,_)).
assert(duration(eli,6)).
assert(seq(eva,eli)).
assert(seq(foo,zed)).
retractall(seq(bar,zed)).
